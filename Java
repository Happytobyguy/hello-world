import java.awt.Color;
import java.awt.Graphics;

import javax.swing.JFrame;
import javax.swing.JPanel;

public class ClassO_o extends JPanel implements Runnable {

	private int Y1 = 390;
	
	private int XLeftFoot = 250;
	private int YLeftFoot = 500;

	private int XRightFoot = 500;
	private int YRightFoot = 500;
	
	private int YHead = 400;
	private int YTop = YHead + 30;
	private int YMid = YHead + 60;
	private int YBot = YHead + 150;
	
	public ClassO_o()
	{
		new Thread(this).start();
	}
	
	private int radius = 50;
	private int rgb = 0;
	
	public void paint(Graphics g)
	{
		g.drawRect(100, 50, 399, 240);
		g.setColor(Color.white);
		g.fillRect(100, 50, 399, 240);	
		g.drawOval(250, 120, 100, 100);		
		g.setColor(Color.red);
		g.fillOval(300 - radius, 170 - radius, 2 * radius, 2  *radius);
		g.setColor(Color.black);
		g.drawLine(100, 50, 100, 500);
		g.drawLine(100, 50, 499, 50);
		g.drawLine(60, 500, 600, 500);
		// Head it was 320 instead 
		g.drawOval(320, YHead, 50, 50);
		// Body it was 345 instead
		g.drawLine(345, YHead + 50, 345, YHead + 150 );
		// Draw left arm it was 410 instead
		g.drawLine(345, YHead + 60, 300, Y1);
		// Draw right arm it was 410 instead
		g.drawLine(345, YHead + 60, 390, Y1);
		// Draw left leg it was 450 instead
		g.drawLine(345, YHead + 150, XLeftFoot, YLeftFoot);
		// Draw right leg it was 450 instead
		g.drawLine(345, YHead + 150, XRightFoot, YRightFoot);
		
		if( drawStars ) {
			g.setColor( new Color(rgb, 0 , 0 ));
			g.drawLine(100, 100, 200, 200);	
			// Draw A STAR
			if( rgb < 255 ) 
				rgb ++;
		}
	}
	
	private int dir = -1;
	private int dirFoot = -1;
	private int dirBody = -1;
	private boolean drawStars = false;
	
	public void updateBody()
	{
		YTop = YHead + 30;
		YMid = YHead + 60;
		YBot = YHead + 150;
	
		if( YHead > 50)
			YHead -= 2 ;
		else if( radius > 0 ) {
			radius --;
			drawStars = true;
		}
	}
	
	public void updateArms()
	{
		if (dir == -1)
			Y1 --;
		else
			Y1 ++;
		
		if (Y1 < YHead + 100 && dir == -1)
			dir = 1;
		else if (Y1 > YHead + 200 && dir == 1)
			dir = -1;	
	}
	
	public void updateLegs()
	{
		if (dirFoot == -1) {
			XLeftFoot --;
			YLeftFoot --;
			XRightFoot ++;
			YRightFoot --;
		}
		else {
			XLeftFoot ++;
			YLeftFoot ++;
			
			XRightFoot --;
			YRightFoot ++;
		}
		
		if( XLeftFoot < 300 && dirFoot == -1 )
		{
			dirFoot = 1;
		} 
		else if ( XRightFoot > 200 && dirFoot == 1 )
		{
			dirFoot = -1;
		}
	}

	public void updatePosition()
	{
		updateBody();
		updateArms();
		updateLegs();
	}
	
	public void run()
	{
		while( true ) {
			updatePosition();
			repaint();
			try { Thread.sleep(15);}catch(Exception e) {}			
		}		
	}
	
	public static void main(String[]args)
	{
		JFrame frame = new JFrame( "My Program" );
		frame.getContentPane().add( new ClassO_o() );
		frame.setSize(800,800);
		frame.setLocation(100, 100);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setVisible(true);;
	}
}
